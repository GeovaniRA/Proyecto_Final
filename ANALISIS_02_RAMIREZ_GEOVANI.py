# -*- coding: utf-8 -*-
"""Proyecto_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oargWDL0IV4W4dDKsHjB1H3cxmte65Wv
"""

# Commented out IPython magic to ensure Python compatibility.
# %%html
# <h1 style="color:#86A8E7"> Caso: Synergy Logistics </h1>

"""## Carga de base de datos"""

import os
os.chdir('/content/drive/MyDrive/Colab Notebooks/Santander_Alta_Empleabilidad/bin')

os.getcwd()

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

datos = pd.read_csv('synergy_logistics_database.csv', sep=',')
datos.head()

datos.tail()

#Al parecer no hay valores faltantes en el dataset
datos.info()

"""# Rutas mas demandadas"""

#Agregamos una nueva columna que contendra la ruta
datos['ruta'] = datos.origin + '-' + datos.destination
rutas = pd.DataFrame(datos.ruta.value_counts().sort_values(ascending = False)[:10])
print(rutas)
#Estas serian las 10 rutas mas demandadas
plt.pie(rutas.ruta, labels=rutas.index, startangle=45, autopct='%1.2f%%')
plt.show()

"""# Uso de medios de transporte"""

# Formacion de agrupaciones
filtro = datos.groupby(['direction', 'transport_mode'])
print(filtro['total_value'].sum())
print(filtro['total_value'].count())

g = sns.FacetGrid(data=datos, col= 'transport_mode', row = 'direction',
                  aspect=1, height=5)
g.map(sns.distplot, 'total_value')
plt.savefig('IMAGEN_1')
plt.show()

# Dado los graficos y datos arrojado de las agrupaciones obtenemos lo siguiente
'''
- IMPORTACIONES:
  El medio de transporte menos importante por valor es "AIR"

- EXPORTACIONES:
  El medio de transporte menos importante por valor es "ROAD"
'''
# Que serian los modos de transporte a reducir

"""# Porcentaje - valor generado por pais"""

#Observemos que paises a travez de la rutas concentran el 80% del valor
datos['ruta'] = datos.origin + '-' + datos.destination
auxiliar = datos.groupby('ruta')
auxiliar_2 = pd.DataFrame(auxiliar.total_value.sum())
auxiliar_2['ponderaciones'] = (auxiliar_2.total_value / auxiliar_2.total_value.sum())*100
new_rutas = auxiliar_2.sort_values('ponderaciones', ascending=False)[:55].ponderaciones.sum()
print(f'Las primeras 55 rutas mas concurridas concentran el: {new_rutas}% del valor.')

#Top 10 ...
a_rutas = auxiliar_2.sort_values('ponderaciones', ascending=False)[:55].ponderaciones
print(a_rutas[:10])

# Separemos los paises
conjunto_1 = []
conjunto_2 = []
for i in a_rutas.index:
  aux = i.split(sep='-')
  conjunto_1.append(aux[0])
  conjunto_2.append(aux[1])

paises = set(conjunto_1 + conjunto_2)

print(f'*** Los paises que concentran el {new_rutas} del valor son: ***')
for i in paises:
  print(i)